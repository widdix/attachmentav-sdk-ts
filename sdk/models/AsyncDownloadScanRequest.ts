/* tslint:disable */
/* eslint-disable */
/**
 * attachmentAV
 * An SDK to integrate virus and malware scan capabilities into JavaScript / TypeScript applications. Scan files for viruses, trojans, and other kinds of malware with attachmentAV powered by Sophos.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AsyncDownloadScanRequest
 */
export interface AsyncDownloadScanRequest {
    /**
     * 
     * @type {string}
     * @memberof AsyncDownloadScanRequest
     */
    downloadUrl: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AsyncDownloadScanRequest
     */
    downloadHeaders?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof AsyncDownloadScanRequest
     */
    callbackUrl: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AsyncDownloadScanRequest
     */
    callbackHeaders?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof AsyncDownloadScanRequest
     */
    traceId?: string;
    /**
     * 
     * @type {string}
     * @memberof AsyncDownloadScanRequest
     */
    customData?: string;
}

/**
 * Check if a given object implements the AsyncDownloadScanRequest interface.
 */
export function instanceOfAsyncDownloadScanRequest(value: object): value is AsyncDownloadScanRequest {
    if (!('downloadUrl' in value) || value['downloadUrl'] === undefined) return false;
    if (!('callbackUrl' in value) || value['callbackUrl'] === undefined) return false;
    return true;
}

export function AsyncDownloadScanRequestFromJSON(json: any): AsyncDownloadScanRequest {
    return AsyncDownloadScanRequestFromJSONTyped(json, false);
}

export function AsyncDownloadScanRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AsyncDownloadScanRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'downloadUrl': json['download_url'],
        'downloadHeaders': json['download_headers'] == null ? undefined : json['download_headers'],
        'callbackUrl': json['callback_url'],
        'callbackHeaders': json['callback_headers'] == null ? undefined : json['callback_headers'],
        'traceId': json['trace_id'] == null ? undefined : json['trace_id'],
        'customData': json['custom_data'] == null ? undefined : json['custom_data'],
    };
}

export function AsyncDownloadScanRequestToJSON(json: any): AsyncDownloadScanRequest {
    return AsyncDownloadScanRequestToJSONTyped(json, false);
}

export function AsyncDownloadScanRequestToJSONTyped(value?: AsyncDownloadScanRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'download_url': value['downloadUrl'],
        'download_headers': value['downloadHeaders'],
        'callback_url': value['callbackUrl'],
        'callback_headers': value['callbackHeaders'],
        'trace_id': value['traceId'],
        'custom_data': value['customData'],
    };
}

